{"version":3,"sources":["chat/message/Message.js","chat/message/UserMessage.js","chat/message/WatsonMessage.js","chat/actions.js","chat/store.js","chat/reducers.js","chat/ChatMessageContainer.js","chat/ChatInputForm.js","chat/window/ChatWindowHeader.js","chat/window/ChatWindowSidebar.js","chat/window/ChatWindow.js","App.js","serviceWorker.js","index.js"],"names":["Message","props","className","styleClass","content","UserMessage","WatsonMessage","sendUserMessageAction","store","dispatch","type","createStore","state","messages","isWaiting","action","isUser","ChatMessageContainer","createMessageElement","bind","subscribe","setState","getState","message","this","map","c","React","Component","ChatInputForm","handleChange","handleSubmit","event","onSubmit","preventDefault","target","value","name","onChange","Header","ChatWindowSidebar","width","height","children","useState","xPosition","setX","useEffect","Fragment","style","transform","minHeight","onClick","ChatWindow","chatDialog","createRef","submitMessage","sessionId","console","log","fetch","headers","Authorization","method","then","data","count","class","href","ref","connect","App","data-testid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.032d02fb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Message.css\";\r\n\r\nexport function Message(props) {\r\n    return (\r\n        <div className={props.styleClass + ' message'}>\r\n            <span>{props.content}</span>\r\n        </div>\r\n    );\r\n}","import {Message} from \"./Message\";\r\nimport React from \"react\";\r\nimport \"./UserMessage.css\";\r\nimport \"./Message.css\";\r\n\r\nexport function UserMessage(props) {\r\n    return (\r\n        <div className=\"message-line\">\r\n            <Message styleClass=\"user-message\" content={props.content}/>\r\n        </div>\r\n    );\r\n}","import {Message} from \"./Message\";\r\nimport React from \"react\";\r\nimport \"./WatsonMessage.css\";\r\nimport \"./Message.css\";\r\n\r\nexport function WatsonMessage(props) {\r\n    return (\r\n        <div className=\"message-line\">\r\n            <Message styleClass=\"watson-message\" content={props.content}/>\r\n        </div>\r\n    );\r\n}","import store from \"./store\";\r\n\r\nexport const SEND_USER_MESSAGE = 'SEND_USER_MESSAGE';\r\nexport const SEND_WATSON_MESSAGE = 'SEND_WATSON_MESSAGE';\r\n\r\nexport const CREATE_WATSON_SESSION = 'CREATE_WATSON_SESSION';\r\n\r\nexport function sendUserMessageAction(content) {\r\n\r\n    store.dispatch(createWatsonSession());\r\n\r\n    return {\r\n        type: SEND_USER_MESSAGE,\r\n        content: content\r\n    }\r\n}\r\n\r\nexport function sendWatsonMessageAction(content) {\r\n    return {\r\n        type: SEND_WATSON_MESSAGE,\r\n        content: content\r\n    }\r\n}\r\n\r\nexport function createWatsonSession() {\r\n    return {\r\n        type: CREATE_WATSON_SESSION\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport { sendMessageReducer } from \"./reducers\";\r\n\r\nconst store = createStore(sendMessageReducer);\r\n\r\nexport default store;","import { SEND_USER_MESSAGE, SEND_WATSON_MESSAGE } from \"./actions\";\r\n\r\nexport function sendMessageReducer(state={messages: [], isWaiting: false}, action) {\r\n    switch(action.type) {\r\n        case(SEND_WATSON_MESSAGE): return {\r\n            messages: [...state.messages, {content: action.content, isUser: false}],\r\n            isWaiting: false\r\n        }\r\n        case(SEND_USER_MESSAGE): return {\r\n            messages: [...state.messages, {content: action.content, isUser: true}],\r\n            isWaiting: true\r\n        }\r\n        default: return {\r\n            ...state\r\n        }\r\n    }\r\n}\r\n\r\nexport function createWatsonSessionReducer(state={sessionId: ''}, action) {\r\n    \r\n}","import React from \"react\";\r\nimport { UserMessage } from \"./message/UserMessage\";\r\nimport \"./ChatMessageContainer.css\";\r\nimport { WatsonMessage } from \"./message/WatsonMessage\";\r\nimport store from \"./store\";\r\n\r\nexport class ChatMessageContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {messages: []};\r\n        this.createMessageElement = this.createMessageElement.bind(this);\r\n\r\n        store.subscribe(() => {\r\n            this.setState(store.getState())\r\n        });\r\n    }\r\n\r\n    createMessageElement(message) {\r\n        if(message.isUser) {\r\n            return (\r\n                <UserMessage content={message.content}/>\r\n            );\r\n        } else {\r\n            return (\r\n                <WatsonMessage content={message.content}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chat-message-container\">\r\n                {this.state.messages.map(c => this.createMessageElement(c))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport class ChatInputForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {message: ''};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n\r\n        this.props.onSubmit(this.state.message);\r\n        \r\n        this.setState({message: ''})\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({message: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" name=\"input-message\" value={this.state.message} onChange={this.handleChange}/>\r\n                <button type=\"submit\" name=\"submit\">Enter</button>\r\n            </form>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport \"./ChatWindowHeader.css\";\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"chat-window-header\">\r\n            <h1>Welcome to the COVID Chat Bot</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","import \"./ChatWindowSidebar.css\";\r\nimport React from \"react\";\r\n\r\nexport const ChatWindowSidebar = ({ width, height, children }) => {\r\n    const [xPosition, setX] = React.useState(-width);\r\n  \r\n    const toggleSidebar = () => {\r\n      if (xPosition < 0) {\r\n        setX(0);\r\n      } else {\r\n        setX(-width);\r\n      }\r\n    };\r\n  \r\n    React.useEffect(() => {\r\n      setX(0);\r\n    }, []);\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"chat-window-sidebar\"\r\n          style={{\r\n            transform: `translatex(${xPosition}px)`,\r\n            width: width,\r\n            minHeight: height\r\n          }}\r\n        >\r\n          <button\r\n            onClick={() => toggleSidebar()}\r\n            className=\"toggle-sidebar\"\r\n            style={{\r\n              transform: `translate(${width}px, 20vh)`\r\n            }}\r\n          ></button>\r\n          <div className=\"content\">{children}</div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  export default ChatWindowSidebar;","import React from \"react\";\r\nimport {ChatMessageContainer} from \"../ChatMessageContainer\";\r\nimport {ChatInputForm} from \"../ChatInputForm\";\r\nimport \"./ChatWindow.css\";\r\nimport Header from \"./ChatWindowHeader\";\r\nimport ChatWindowSidebar from \"./ChatWindowSidebar\";\r\nimport { sendUserMessageAction, sendWatsonMessageAction} from \"../actions\";\r\nimport {connect} from \"react-redux\";\r\nimport store from \"../store\";\r\n\r\nclass ChatWindow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chatDialog = React.createRef();\r\n        this.submitMessage = this.submitMessage.bind(this);\r\n        this.state = {sessionId: ''};\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('component moun');\r\n        fetch('https://api.us-south.assistant.watson.cloud.ibm.com/instances/abadaf22-9195-425a-aa9a-3e86f1cb4a28/v2/assistants/cca390d2-78f4-442c-b2e4-6275fe74ed82/sessions?version=2020-04-01', {\r\n            headers: {\r\n                Authorization: \"2Vaj7UT5DHz6Kzco18u23jrEZEpry_79Xk7Gz3TF1bpA\"\r\n            },\r\n            method: 'POST'\r\n        }).then(data => console.log(data));\r\n    }\r\n\r\n    submitMessage(message) {\r\n\r\n        this.props.dispatch(sendUserMessageAction(message));\r\n\r\n        this.props.dispatch(sendWatsonMessageAction(message));\r\n\r\n        this.setState({count: this.state.count + 1});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div> \r\n                <Header />\r\n                <div class=\"main-wrapper\">\r\n                    <ChatWindowSidebar width={300} height={\"100vh\"}>\r\n                        <h1 class=\"side-bar\"> <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/more/index.html\">Center for Disease Control and Prevention: Covid</a> </h1>\r\n                        <h1 class=\"side-bar\"> <a href=\"https://www.nih.gov/coronavirus\">National Institutes of Health: Covid</a> </h1>\r\n                        <h1 class=\"side-bar\"> <a href=\"https://www.columbus.gov/covid19resources/\">City of Columbus Covid Resources</a> </h1>\r\n                    </ChatWindowSidebar>\r\n                    <div className=\"chat-window\">\r\n                        <ChatMessageContainer ref={this.chatDialog}/>\r\n                        <ChatInputForm onSubmit={this.submitMessage}/>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(ChatWindow);","import React from 'react';\r\nimport './App.css';\r\nimport ChatWindow from \"./chat/window/ChatWindow\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div data-testid=\"app-div\" className=\"App\">\r\n        <ChatWindow />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./chat/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}